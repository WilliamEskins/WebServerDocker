
We plan on implementing this by using Docker.

Benchmarks:  

1) Redis
  The goal is to create a server using Docker, measure the latency and increase the efficiency 
  of it. This cloud-based server is used for caching, storing session information, and maintaining 
  hot unstructured data sets.
  
2) Memory Bandwidth - Stream
  The goal for this is to implement Docker in a CloudLab profile to measure the rate at which data can be read. 
  Our goal is to reach the Docker standards set on Table 1 from the 2015 Comparison paper. 
  
3) Random Memory Access - RandomAccess
  Random Memory Access works to focus on random memory performance. It takes a large section of memory for its 
  working set that is larger than any caches or buffers. Random 8 byte words are then read, modified, and written back. 
  The random qualities come from using linear feedback shift registers that do not require any memory operations. 
  Random Memory Access strives to have large working sets with minimal computation. 
  
4) HPC (High Performance Computing) - Linpack
  Linpack solves a large amount of calculations in a given amount of time and then measures how many processes and calculations
  it was able to complete in that time. In this case, it would be measured in giga floating point operations per second. 
